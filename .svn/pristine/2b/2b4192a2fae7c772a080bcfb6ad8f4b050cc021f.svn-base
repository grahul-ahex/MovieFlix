package com.movieflix.activities;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.widget.TabLayout;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;

import com.android.volley.Request;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.movieflix.MyApplication;
import com.movieflix.R;
import com.movieflix.adapters.RecyclerAdapterHome;
import com.movieflix.adapters.SectionsPagerAdapter;
import com.movieflix.datamodel.MovieModel;
import com.movieflix.trasnferdata.MoviesParsing;
import com.movieflix.utils.UrlUtils;

import java.util.ArrayList;

public class HomeActivity extends AppCompatActivity {
    private SectionsPagerAdapter mSectionsPagerAdapter;
    private ViewPager mViewPager;
    public static HomeActivity mInstance;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home);
        mInstance = this;
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        mSectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager(), this);

        // Set up the ViewPager with the sections adapter.
        mViewPager = (ViewPager) findViewById(R.id.container);
        mViewPager.setAdapter(mSectionsPagerAdapter);
        mViewPager.setOffscreenPageLimit(3);
//        mViewPager.setPageTransformer(true, new CubeOutTransformer());

        TabLayout tabLayout = (TabLayout) findViewById(R.id.tabs);

        mViewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
        tabLayout.addOnTabSelectedListener(new TabLayout.ViewPagerOnTabSelectedListener(mViewPager));
//
//        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
//        fab.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View view) {
//                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
//                        .setAction("Action", null).show();
//            }
//        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_home, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.image_search_home:
                gotoSearch();
                break;
            case R.id.action_learn_more:
                Intent welcomeIntent = new Intent(this, WelcomeActivity.class);
                startActivity(welcomeIntent);

                break;
        }

        return super.onOptionsItemSelected(item);
    }

    void gotoSearch() {
        try {

            Intent searchIntent = new Intent(this, MainSearchActivity.class);
            startActivity(searchIntent);
        } catch (Exception e) {
            Log.e("Search", e.getMessage());
            e.printStackTrace();
        }

    }

    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {
        /**
         * The fragment argument representing the section number for this
         * fragment.
         */
        private static final String ARG_SECTION_NUMBER = "section_number";
        //        private static final String ARG_SECTION_DATA = "section_data";
        private static final String ARG_SECTION_URL = "section_url";
        private static String[] urls;

        RecyclerAdapterHome recyclerAdapterHome;
        ArrayList<MovieModel> modelArrayListAll;

        public PlaceholderFragment() {
            modelArrayListAll = new ArrayList<>();
            urls = new String[]{UrlUtils.NOW_PLAYING_MOVIES, UrlUtils.UPCOMING_MOVIES, UrlUtils.POPULAR_MOVIES, UrlUtils.TOP_RATED_MOVIES};
        }

        public static PlaceholderFragment newInstance(int sectionNumber) {
            PlaceholderFragment fragment = new PlaceholderFragment();
            Bundle args = new Bundle();
            args.putInt(ARG_SECTION_NUMBER, sectionNumber);
            args.putString(ARG_SECTION_URL, urls[sectionNumber - 1]);
            fragment.setArguments(args);
            return fragment;
        }

        @SuppressLint("ClickableViewAccessibility")
        @Override
        public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.fragment_home, container, false);
            final RecyclerView recyclerView = rootView.findViewById(R.id.recyclerHome);
            recyclerView.setLayoutManager(new GridLayoutManager(getContext(), 3));
            recyclerAdapterHome = new RecyclerAdapterHome(getContext(), modelArrayListAll);
            recyclerView.setAdapter(recyclerAdapterHome);
            StringRequest stringRequest = new StringRequest(Request.Method.GET, getArguments().getString(ARG_SECTION_URL),
                    new Response.Listener<String>() {
                        @Override
                        public void onResponse(String response) {
//                    modelArrayList = new MoviesParsing().movieModelsParse(response);
                            modelArrayListAll.addAll(new MoviesParsing().movieModelsParse(response));
                            recyclerAdapterHome = new RecyclerAdapterHome(getContext(), modelArrayListAll);
                            recyclerView.setAdapter(recyclerAdapterHome);
                            recyclerAdapterHome.notifyDataSetChanged();
                        }
                    }, new Response.ErrorListener() {
                @Override
                public void onErrorResponse(VolleyError error) {
//                            showError();
                }
            });
            MyApplication.getInstance().addToRequestQueue(stringRequest);
//            recyclerView.setOnTouchListener(new View.OnTouchListener() {
//                @Override
//                public boolean onTouch(View v, MotionEvent event) {
//                    int action = event.getAction();
//                    switch (action) {
//                        case MotionEvent.ACTION_DOWN:
//                            // Disallow ListView to intercept touch events.
//                            v.getParent().requestDisallowInterceptTouchEvent(true);
//                            break;
//
//                        case MotionEvent.ACTION_UP:
//                            // Allow ListView to intercept touch events.
//                            v.getParent().requestDisallowInterceptTouchEvent(false);
//                            break;
//                    }
//
//                    // Handle HorizontalScrollView touch events.
//                    v.onTouchEvent(event);
//                    return true;
//                }
//            });
            return rootView;
        }
    }
}
